# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# auth
GET         /oauthCallback                com.gu.viewer.controllers.Application.oauthCallback

# Home page
GET        /                              com.gu.viewer.controllers.Application.index
GET        /management/healthcheck        com.gu.viewer.controllers.Management.healthcheck

GET        /preview/auth-callback         com.gu.viewer.controllers.Proxy.previewAuthCallback


GET        /preview/*path                 com.gu.viewer.controllers.Application.previewViewer(path)
GET        /live/*path                    com.gu.viewer.controllers.Application.liveViewer(path)


GET        /proxy/preview/*path           com.gu.viewer.controllers.Proxy.proxy(service="preview", path)
POST       /proxy/preview/*path           com.gu.viewer.controllers.Proxy.proxy(service="preview", path)

GET        /proxy/live/*path              com.gu.viewer.controllers.Proxy.proxy(service="live", path)
POST       /proxy/live/*path              com.gu.viewer.controllers.Proxy.proxy(service="live", path)

POST       /send-email                    com.gu.viewer.controllers.Email.sendEmail(path)


# Long life cache for statically versioned font assets
GET        /assets/fonts/v1/*file         controllers.Assets.at(path="/public/fonts/v1", file, aggressiveCaching: Boolean = true)

# Map static resources from the /public folder to the /assets URL path
GET        /assets/*file                  controllers.Assets.versioned(path="/public", file: Asset)

#Robots.txt
GET        /robots.txt                    controllers.Assets.at(path="/public", file="robots.txt", aggressiveCaching: Boolean = true)

GET        /*path                         com.gu.viewer.controllers.Proxy.redirectRelative(path)

+nocsrf
POST       /*path                         com.gu.viewer.controllers.Proxy.catchRelativePost(path)

